{"version":3,"sources":["images/terminalIcon.svg","images/stopwatchIcon.svg","images/folder3.svg","images/folder1.svg","images/folder2.svg","commons/app.jsx","components/Taskbar.jsx","commons/fileSystem.jsx","components/Terminal.jsx","components/Stopwatch.jsx","components/Experiment.jsx","App.js","theme.js","reducers/taskbar.jsx","store.jsx","index.js"],"names":["OPEN_APP","CLOSE_APP","SHOW_APP","HIDE_APP","appType","defaultApps","TERMINAL","id","title","defaultPosition","x","y","iconSrc","terminalIcon","isOpen","isHidden","STOPWATCH","stopwatchIcon","EXPLORER","folderIcon3","useStyle","makeStyles","theme","taskbarMain","position","width","bottom","display","flexDirection","alignItems","zIndex","taskbarTray","minWidth","minHeight","justifyContent","backgroundColor","borderRadius","paddingLeft","paddingRight","trayIcon","height","margin","padding","cursor","transition","shapeOutside","transform","trayIconActive","maxHeight","content","connect","state","dispatch","toggleApp","type","appid","taskbar","classes","Grid","className","item","style","Object","values","map","app","onClick","e","appInfo","_handleToggleApp","borderBottom","src","FOLDER","FILE","defaultFS","0","name","kids","parentId","1","2","3","terminalBody","overflowX","overflowY","color","terminalRowInput","terminalRowHistory","paddingTop","terminalRowHighlight","border","palette","shadesOfGrey","light","shadesOfPurple","fontWeight","terminalRowError","shadesOfRed","dirpath","shadesOfBlue","dark","marginRight","defaultHelpOutput","defaultHistory","path","input","output","isDefault","isError","_process_ls","currentDir","fileSystem","dirId","join","_process_cd","targetDir","obj","dirAvailable","indexOfDir","toLowerCase","indexOf","Terminal","terminalId","ref","useRef","useState","terminalHistory","setTerminalHistory","currDir","setCurrDir","console","log","dirList","parentDir","push","reverse","getDirPath","_process","extra","useEffect","current","scrollTo","scrollHeight","index","terminalRowOutput","key","Input","defaultValue","disableUnderline","fullWidth","autoFocus","onBlur","currentTarget","focus","onKeyUp","keyCode","value","target","split","slice","_handelKeyUp","root","rowFlex","colFlex","alignContent","playButton","status","play","fontSize","pauseButton","pause","flagButton","restoreButton","tableContainer","marginBottom","table","maxWidth","tableBody","lapCellTypo","lapsDefault","lapsList","lastLapTime","fastest","lapTime","Infinity","slowest","ControlButtons","args","time","isActive","handelPlayPause","handelLaps","handelReset","Tooltip","IconButton","true","false","disabled","Laps","laps","formatTime","sec","Math","floor","padStart","min","hour","Typography","variant","TableContainer","component","Paper","elevation","Table","stickyHeader","size","TableHead","TableRow","tableRow","label","column","TableCell","TableBody","lap","hover","lapIndex","length","totalTime","formattedRow","Stopwatch","setTime","setIsActive","setLaps","intervalRef","setTimeout","clearTimeout","Box","unit","vairant","thisLap","newSlowest","newFastest","newLaps","viewPoint","perspective","draggableContainer","draggableContent","overflow","draggableHeader","borderTopLeftRadius","borderTopRightRadius","titleHolder","iconHolder","iconDot","RoundButton","radius","m","text","events","useTheme","shade","hue","onAppClose","onAppHide","appComponent","dragHandel","dragHandelId","bounds","handle","visibility","Toolbar","disableGutters","top","left","background","renderApp","createMuiTheme","redViolet","shadesOfYellow","shadesOfGreen","containerBackground","typography","fontFamily","icons","scroll","blueGrey","overrides","MuiCssBaseline","_changeAppStatus","apps","hasOwnProperty","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c4dd12b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/terminalIcon.54f405ff.svg\";","export default __webpack_public_path__ + \"static/media/stopwatchIcon.b1d0bddc.svg\";","export default __webpack_public_path__ + \"static/media/folder3.af159eb4.svg\";","export default __webpack_public_path__ + \"static/media/folder1.19ee5925.svg\";","export default __webpack_public_path__ + \"static/media/folder2.48c73e12.svg\";","import terminalIcon from \"../images/terminalIcon.svg\";\r\nimport stopwatchIcon from \"../images/stopwatchIcon.svg\";\r\nimport folderIcon1 from \"../images/folder1.svg\";\r\nimport folderIcon2 from \"../images/folder2.svg\";\r\nimport folderIcon3 from \"../images/folder3.svg\";\r\n\r\nexport const OPEN_APP = \"OPEN_APP\";\r\nexport const CLOSE_APP = \"CLOSE_APP\";\r\nexport const SHOW_APP = \"SHOW_APP\";\r\nexport const HIDE_APP = \"HIDE_APP\";\r\n\r\nexport const appType = {\r\n  TERMINAL: \"TERMINAL\",\r\n  STOPWATCH: \"STOPWATCH\",\r\n};\r\n\r\nexport const defaultApps = {\r\n  TERMINAL: {\r\n    id: \"TERMINAL\",\r\n    title: \"Console\",\r\n    defaultPosition: { x: 200, y: 200 },\r\n    iconSrc: terminalIcon,\r\n    isOpen: false,\r\n    isHidden: false,\r\n  },\r\n  STOPWATCH: {\r\n    id: \"STOPWATCH\",\r\n    title: \"Stopwatch\",\r\n    defaultPosition: { x: 450, y: 0 },\r\n    iconSrc: stopwatchIcon,\r\n    isOpen: false,\r\n    isHidden: false,\r\n  },\r\n  EXPLORER: {\r\n    id: \"EXPLORER\",\r\n    title: \"File Explorer\",\r\n    defaultPosition: { x: 450, y: 400 },\r\n    iconSrc: folderIcon3,\r\n    isOpen: true,\r\n    isHidden: false,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { Badge, Grid, withStyles } from \"@material-ui/core\";\r\n\r\nimport { HIDE_APP, SHOW_APP, OPEN_APP } from \"../commons/app\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  taskbarMain: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    bottom: \"1%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    zIndex: \"0\",\r\n  },\r\n\r\n  taskbarTray: {\r\n    minWidth: \"calc(15% + 30px)\",\r\n    minHeight: \"60px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(255,255,255,0.2)\",\r\n    borderRadius: \"30px\",\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n\r\n    // borderBottom: '2px solid rgba(255,255,255,0.2)',\r\n    // borderBottomLeftRadius: '10%',\r\n    // borderBottomRightRadius: '10%',\r\n    // background: 'linear-gradient(to top, rgba(255,255,255,0.5), rgba(255,255,255,0))'\r\n  },\r\n\r\n  trayIcon: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    margin: \"7px\",\r\n    padding: \"3px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"10%\",\r\n    transition: \"transform 250ms ease-out\",\r\n    shapeOutside: \"circle()\",\r\n\r\n    \"&>img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n\r\n    \"&:hover\": {\r\n      transform: \"translateY(-25%) scale(1.5)\",\r\n      backgroundColor: \"rgba(255,255,255,0.1)\",\r\n\r\n      \"&>img\": {\r\n        zIndex: \"2\",\r\n      },\r\n    },\r\n  },\r\n\r\n  trayIconActive: {\r\n    \"&::after\": {\r\n      minWidth: \"50%\",\r\n      maxHeight: \"5px\",\r\n      margin: \"5%\",\r\n      backgroundColor: \"rgba(255,255,255,0.3)\",\r\n      content: \".\",\r\n      display: \"block\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Taskbar({ taskbar, toggleApp }) {\r\n  const classes = useStyle();\r\n\r\n  const _handleToggleApp = (appInfo) => {\r\n    let type = OPEN_APP;\r\n    if (!appInfo.isOpen) {\r\n      type = OPEN_APP;\r\n    } else if (appInfo.isHidden) {\r\n      type = SHOW_APP;\r\n    } else {\r\n      type = HIDE_APP;\r\n    }\r\n    const appid = appInfo.id;\r\n    // dispatch function\r\n    toggleApp(type, appid);\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.taskbarMain}>\r\n      <Grid\r\n        item\r\n        className={classes.taskbarTray}\r\n        style={{\r\n          shapeOutside: \"eclipse(50px,50px)\",\r\n        }}\r\n      >\r\n        {Object.values(taskbar).map((app) => (\r\n          <Grid\r\n            item\r\n            className={classes.trayIcon}\r\n            onClick={(e) => _handleToggleApp(app)}\r\n            style={app.isOpen ? { borderBottom: \"2px solid #c56183\" } : {}}\r\n          >\r\n            <img src={app.iconSrc} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapState = (state) => state;\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  toggleApp: (type, appid) => dispatch({ type, appid }),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Taskbar);\r\n","export const FOLDER = \"FOLDER\";\r\nexport const FILE = \"FILE\";\r\nexport const ROOT = 0;\r\n\r\nexport const MK_DIR = \"MK_DIR\";\r\n\r\nexport const defaultFS = {\r\n  0: {\r\n    id: 0,\r\n    name: \"~\",\r\n    type: FOLDER,\r\n    iconSrc: \"\",\r\n    kids: [1, 3, 2],\r\n    parentId: 0,\r\n  },\r\n  1: {\r\n    id: 1,\r\n    name: \"src\",\r\n    type: FOLDER,\r\n    iconSrc: \"\",\r\n    kids: [],\r\n    parentId: 0,\r\n  },\r\n  2: {\r\n    id: 2,\r\n    name: \"index.js\",\r\n    type: FILE,\r\n    iconSrc: \"\",\r\n    kids: [],\r\n    parentId: 0,\r\n  },\r\n  3: {\r\n    id: 3,\r\n    name: \"app.js\",\r\n    type: FILE,\r\n    iconSrc: \"\",\r\n    kids: [],\r\n    parentId: 0,\r\n  },\r\n};\r\n","import React, { Component, useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { defaultFS } from \"../commons/fileSystem\";\r\n\r\nimport { Grid, Input, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  terminalBody: {\r\n    margin: \"5px\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    color: \"black\",\r\n    minHeight: \"200px\",\r\n    maxHeight: \"100px\",\r\n  },\r\n  terminalRowInput: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  terminalRowHistory: {\r\n    paddingTop: \"5px\",\r\n  },\r\n  terminalRowHighlight: {\r\n    width: \"100%\",\r\n    padding: \"5px 5px 5px 10px\",\r\n    borderRadius: \"10px 0 0 10px\",\r\n    border: `1px solid ${theme.palette.shadesOfGrey.light}`,\r\n    color: theme.palette.shadesOfPurple.light,\r\n    fontWeight: \"bold\",\r\n  },\r\n  terminalRowError: {\r\n    color: theme.palette.shadesOfRed.light,\r\n  },\r\n  dirpath: {\r\n    color: theme.palette.shadesOfBlue.dark,\r\n    fontWeight: \"bold\",\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nconst defaultHelpOutput =\r\n  \"following commands are availabler\\nls : list content in current directory\\ncd : cd <directoryName>\\nopen : open <fileName>\";\r\n\r\nconst defaultHistory = [\r\n  {\r\n    path: \"\",\r\n    input: \"Enter help for more info.\",\r\n    output: \"\",\r\n    isDefault: true,\r\n    isError: false,\r\n  },\r\n];\r\n\r\nconst _process_ls = (currentDir, fileSystem) => {\r\n  let output = fileSystem[currentDir].kids\r\n    .map((dirId) => fileSystem[dirId].name)\r\n    .join(\"\\t\");\r\n  return output;\r\n};\r\nconst _process_cd = (currentDir, targetDir, fileSystem) => {\r\n  const obj = { dirAvailable: true, output: \"\", dirId: currentDir };\r\n  if (targetDir == \".\") {\r\n    return obj;\r\n  } else if (targetDir == \"..\") {\r\n    obj.dirId = fileSystem[currentDir].parentId;\r\n    return obj;\r\n  } else {\r\n    const kidsDirs = fileSystem[currentDir].kids.map((dirId) =>\r\n      fileSystem[dirId].name.toLowerCase()\r\n    );\r\n    const indexOfDir = kidsDirs.indexOf(targetDir.toLowerCase());\r\n    if (indexOfDir == -1 || fileSystem[indexOfDir].type != \"FOLDER\") {\r\n      obj.dirAvailable = false;\r\n      obj.output = `no such directory '${targetDir}'`;\r\n    } else {\r\n      obj.dirId = fileSystem[currentDir].kids[indexOfDir];\r\n    }\r\n  }\r\n  return obj;\r\n};\r\nconst getDirPath = (currentDir, fileSystem) => {\r\n  console.log(currentDir);\r\n  const dirList = [fileSystem[currentDir].name];\r\n  let parentDir = fileSystem[currentDir].parentId;\r\n  while (currentDir != parentDir) {\r\n    dirList.push(fileSystem[parentDir].name);\r\n    currentDir = parentDir;\r\n    parentDir = fileSystem[currentDir].parentId;\r\n  }\r\n  let path = dirList.reverse().join(\"/\") + \"/\";\r\n  return path;\r\n};\r\n\r\nconst Terminal = ({ terminalId }) => {\r\n  const classes = useStyle();\r\n  const ref = useRef(null);\r\n  const [terminalHistory, setTerminalHistory] = useState(defaultHistory);\r\n  const [currDir, setCurrDir] = useState(0);\r\n\r\n  const fileSystem = { ...defaultFS };\r\n\r\n  const path = getDirPath(currDir, fileSystem);\r\n\r\n  const _handelKeyUp = (e) => {\r\n    if (e.keyCode == 13) {\r\n      const value = e.target.value.split(\" \");\r\n      const input = value[0];\r\n      const extra = value.slice(1);\r\n      _process(path, input, extra);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  // process terminal comands\r\n  const _process = (path, input, extra = []) => {\r\n    let output = \"\";\r\n    switch (input) {\r\n      case \"help\":\r\n        output = defaultHelpOutput;\r\n        break;\r\n      case \"ls\":\r\n        output = _process_ls(currDir, fileSystem);\r\n        console.log(`ls : ${output}`);\r\n        break;\r\n      case \"cd\":\r\n        const targetDir = extra.join(\" \");\r\n        const obj = _process_cd(currDir, targetDir, fileSystem);\r\n        output = obj.output;\r\n        if (obj.dirId != -1) {\r\n          setCurrDir(obj.dirId);\r\n        }\r\n        break;\r\n      case \"clear\":\r\n        setTerminalHistory([]);\r\n        return;\r\n      default:\r\n        output = \"invalid command\";\r\n        break;\r\n    }\r\n    const obj = { path, input, output };\r\n    console.log(obj);\r\n    setTerminalHistory([...terminalHistory, obj]);\r\n  };\r\n\r\n  const renderTerminalHistoryRow = (obj, index) => {\r\n    const terminalRowHighlight = obj.isDefault\r\n      ? classes.terminalRowHighlight\r\n      : \"\";\r\n    const terminalRowOutput = obj.isError ? classes.terminalRowError : \"\";\r\n    const key = `terminalHistoryRow${index}`;\r\n\r\n    return (\r\n      <Grid item key={key} className={classes.terminalRowHistory}>\r\n        <Grid item className={classes.terminalRowInput}>\r\n          <Grid item className={classes.dirpath}>\r\n            {obj.path}\r\n          </Grid>\r\n          <Grid item className={terminalRowHighlight}>\r\n            {obj.input}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item className={terminalRowOutput}>\r\n          <pre>{obj.output}</pre>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    ref.current.scrollTo(0, ref.current.scrollHeight);\r\n  }, [terminalHistory]);\r\n\r\n  return (\r\n    <Grid item className={classes.terminalBody} ref={ref}>\r\n      {terminalHistory.map(renderTerminalHistoryRow)}\r\n      {/* input box for new input */}\r\n      <Grid item className={classes.terminalRowInput}>\r\n        <Grid item className={classes.dirpath}>\r\n          {/* {getDirPath(currDir, fileSystem)} */}\r\n          {path}\r\n        </Grid>\r\n        <Input\r\n          style={{ color: \"black\", input: { padding: \"0px\" } }}\r\n          defaultValue=\"\"\r\n          disableUnderline\r\n          fullWidth\r\n          autoFocus\r\n          onBlur={(e) => e.currentTarget.focus()}\r\n          onKeyUp={(e) => _handelKeyUp(e)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Terminal;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableContainer,\r\n  TableBody,\r\n  Paper,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\r\nimport OutlinedFlagOutlinedIcon from \"@material-ui/icons/OutlinedFlagOutlined\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    maxHeight: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  rowFlex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n  colFlex: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  playButton: {\r\n    color: theme.status.play,\r\n    fontSize: \"48px\",\r\n  },\r\n  pauseButton: {\r\n    color: theme.status.pause,\r\n    fontSize: \"48px\",\r\n  },\r\n  flagButton: {\r\n    color: \"\",\r\n    fontSize: \"48px\",\r\n  },\r\n  restoreButton: {\r\n    color: \"\",\r\n    fontSize: \"48px\",\r\n  },\r\n  tableContainer: {\r\n    maxHeight: \"300px\",\r\n    marginBottom: \"10px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: \"380px\",\r\n    maxWidth: \"400px\",\r\n  },\r\n  tableBody: {\r\n    // maxHeight: \"200px\",\r\n    alignItems: \"space-around\",\r\n    overflowY: \"auto\",\r\n  },\r\n  lapCellTypo: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nconst lapsDefault = {\r\n  lapsList: [],\r\n  lastLapTime: 0,\r\n  fastest: {\r\n    lapTime: Infinity,\r\n    index: -1,\r\n  },\r\n  slowest: {\r\n    lapTime: -1,\r\n    index: -1,\r\n  },\r\n};\r\n\r\nconst Stopwatch = () => {\r\n  const [time, setTime] = useState(0.0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [laps, setLaps] = useState(lapsDefault);\r\n  const intervalRef = useRef(0);\r\n\r\n  const formatTime = () => {\r\n    const sec = `${Math.floor(time) % 60}`.padStart(2, \"0\");\r\n    const min = `${Math.floor(time / 60) % 60}`.padStart(2, \"0\");\r\n    const hour = `${Math.floor(time / 3600)}`.padStart(2, \"0\");\r\n    return (\r\n      <>\r\n        <Grid item className={classes.rowFlex}>\r\n          <Typography variant=\"h1\">{[hour, min, sec].join(\":\")}</Typography>\r\n        </Grid>\r\n        <Box className={classes.rowFlex}>\r\n          {[\"hr\", \"min\", \"sec\"].map((unit) => (\r\n            <Typography key={unit} vairant=\"overline\">\r\n              {unit}\r\n            </Typography>\r\n          ))}\r\n        </Box>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handelPlayPause = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n  const handelReset = () => {\r\n    setTime(0);\r\n    setIsActive(false);\r\n    setLaps(lapsDefault);\r\n  };\r\n  const handelLaps = () => {\r\n    const lapTime = time - laps.lastLapTime;\r\n    const thisLap = {\r\n      lapIndex: laps.lapsList.length,\r\n      lapTime: lapTime,\r\n      totalTime: time,\r\n    };\r\n\r\n    const newSlowest = { ...laps.slowest };\r\n    if (thisLap.lapTime > laps.slowest.lapTime) {\r\n      newSlowest.lapTime = thisLap.lapTime;\r\n      newSlowest.index = laps.lapsList.length;\r\n    }\r\n    const newFastest = { ...laps.fastest };\r\n    if (thisLap.lapTime < laps.fastest.lapTime) {\r\n      newFastest.lapTime = thisLap.lapTime;\r\n      newFastest.index = laps.lapsList.length;\r\n    }\r\n\r\n    const newLaps = {\r\n      lapsList: [...laps.lapsList, thisLap],\r\n      lastLapTime: Math.floor(time),\r\n      slowest: newSlowest,\r\n      fastest: newFastest,\r\n    };\r\n\r\n    setLaps(newLaps);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      intervalRef.current = setTimeout(() => setTime(time + 0.1), 100);\r\n      return () => clearTimeout(intervalRef.current);\r\n    }\r\n  }, [time, isActive]);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <>\r\n      <Grid className={classes.root}>\r\n        <Grid item>{formatTime()}</Grid>\r\n        <Grid item>\r\n          <ControlButtons\r\n            args={{\r\n              time,\r\n              isActive,\r\n              classes,\r\n              handelPlayPause,\r\n              handelLaps,\r\n              handelReset,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item>{laps.lapsList.length > 0 && <Laps laps={laps} />}</Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ControlButtons = ({\r\n  args: { time, isActive, handelPlayPause, handelLaps, handelReset, classes },\r\n}) => {\r\n  return (\r\n    <Grid item className={classes.rowFlex}>\r\n      {/* play or pause stopwatch */}\r\n      <Tooltip title={isActive ? \"Pause\" : \"Play\"}>\r\n        <IconButton onClick={() => handelPlayPause()}>\r\n          {\r\n            {\r\n              true: <PauseCircleFilledIcon className={classes.pauseButton} />,\r\n              false: <PlayCircleFilledIcon className={classes.playButton} />,\r\n            }[isActive]\r\n          }\r\n        </IconButton>\r\n      </Tooltip>\r\n      {/* create new laps */}\r\n      <Tooltip title={\"Lap / Splits\"}>\r\n        <IconButton disabled={!isActive} onClick={() => handelLaps()}>\r\n          <OutlinedFlagOutlinedIcon className={classes.flagButton} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {/* reset stopwatch */}\r\n      <Tooltip title={\"Reset\"}>\r\n        <IconButton disabled={time === 0} onClick={() => handelReset()}>\r\n          <RestoreIcon className={classes.restoreButton} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Laps = ({ laps }) => {\r\n  const classes = useStyle();\r\n  const columns = [\r\n    { id: \"lapIndex\", label: \"Laps\" },\r\n    { id: \"lapTime\", label: \"Time\" },\r\n    { id: \"totalTime\", label: \"Total\" },\r\n  ];\r\n\r\n  const formatTime = (time) => {\r\n    const sec = `${Math.floor(time)}`.padStart(2, \"0\");\r\n    const min = `${Math.floor(time / 60) % 60}`.padStart(2, \"0\");\r\n    const hour = `${Math.floor(time / 3600)}`.padStart(2, \"0\");\r\n    return (\r\n      <Typography variant=\"body1\">{[hour, min, sec].join(\" : \")}</Typography>\r\n    );\r\n  };\r\n  const formattedRow = (lap, index) => {\r\n    return (\r\n      <TableRow hover key={index}>\r\n        <TableCell>\r\n          <Typography className={classes.lapCellTypo} component=\"span\">\r\n            {lap.lapIndex}\r\n          </Typography>\r\n          {laps.lapsList.length > 1 && laps.slowest.index === lap.lapIndex && (\r\n            <Typography component=\"span\">Slowest</Typography>\r\n          )}\r\n          {laps.lapsList.length > 1 && laps.fastest.index === lap.lapIndex && (\r\n            <Typography component=\"span\">Fastest</Typography>\r\n          )}\r\n        </TableCell>\r\n        <TableCell>{formatTime(lap.lapTime)}</TableCell>\r\n        <TableCell>{formatTime(lap.totalTime)}</TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableContainer\r\n      component={Paper}\r\n      elevation={4}\r\n      className={classes.tableContainer}\r\n    >\r\n      <Table className={classes.table} stickyHeader size=\"small\">\r\n        <TableHead>\r\n          <TableRow className={classes.tableRow}>\r\n            {columns.map((column) => (\r\n              <TableCell key={column.id}>{column.label}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tableBody}>\r\n          {laps.lapsList\r\n            .slice()\r\n            .reverse()\r\n            .map((lap, index) => formattedRow(lap, index))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","import React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Grid,\r\n  Icon,\r\n  makeStyles,\r\n  Paper,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  viewPoint: {\r\n    perspective: \"100px\",\r\n  },\r\n  draggableContainer: {\r\n    // transform: \"rotateX(45deg)\",\r\n    position: \"absolute\",\r\n    minWidth: \"450px\",\r\n    maxWidth: \"450px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  draggableContent: {\r\n    maxHeight: \"500px\",\r\n    overflow: \"auto\",\r\n  },\r\n  draggableHeader: {\r\n    minHeight: \"25px\",\r\n    borderTopLeftRadius: \"5px\",\r\n    borderTopRightRadius: \"5px\",\r\n    backgroundColor: theme.palette.shadesOfGrey.light,\r\n  },\r\n  titleHolder: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    width: \"80%\",\r\n    cursor: \"default\",\r\n  },\r\n  iconHolder: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  iconDot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    \"&:hover\": {\r\n      color: theme.palette.shadesOfBlue.dark,\r\n      cursor: \"default\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction RoundButton(\r\n  { radius, color, m, events, text } = {\r\n    radius: 15,\r\n    color: \"red\",\r\n    m: 2,\r\n    text: \"-\",\r\n  }\r\n) {\r\n  const classes = useStyle();\r\n  const theme = useTheme();\r\n  const [shade, hue] = color;\r\n  return (\r\n    <div\r\n      {...events}\r\n      className={classes.iconDot}\r\n      style={{\r\n        backgroundColor: theme.palette[shade][hue],\r\n        color: theme.palette[shade][hue],\r\n        borderRadius: radius,\r\n        height: radius,\r\n        width: radius,\r\n        margin: `0 ${m}px`,\r\n      }}\r\n    >\r\n      <b className={classes.iconDot}>{text}</b>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Experiment({ appInfo, appComponent, onAppClose, onAppHide }) {\r\n  const classes = useStyle();\r\n  const dragHandel = `dragHandel${appInfo.title || \"_\"}`;\r\n  const dragHandelId = `#${dragHandel}`;\r\n  return (\r\n    <Draggable\r\n      bounds=\"parent\"\r\n      handle={dragHandelId}\r\n      defaultPosition={appInfo.defaultPosition}\r\n    >\r\n      <Grid\r\n        className={classes.draggableContainer}\r\n        component={Paper}\r\n        variant=\"elevation\"\r\n        style={{ visibility: appInfo.isHidden ? \"hidden\" : \"\" }}\r\n      >\r\n        <Grid item component={Paper} elevation={3} id={dragHandel}>\r\n          <Toolbar disableGutters className={classes.draggableHeader}>\r\n            <Grid item className={classes.iconHolder}>\r\n              <RoundButton\r\n                events={{\r\n                  onClick: (e) => onAppClose(appInfo.id),\r\n                }}\r\n                color={[\"shadesOfRed\", \"light\"]}\r\n                radius={15}\r\n                m={5}\r\n                text={\"x\"}\r\n              />\r\n              <RoundButton\r\n                events={{\r\n                  onClick: (e) => onAppHide(appInfo.id),\r\n                }}\r\n                color={[\"shadesOfYellow\", \"light\"]}\r\n                radius={15}\r\n                m={5}\r\n                text={\"-\"}\r\n              />\r\n              {/* <RoundButton\r\n                color={[\"shadesOfGreen\", \"light\"]}\r\n                radius={15}\r\n                m={5}\r\n              /> */}\r\n            </Grid>\r\n            <Grid item className={classes.titleHolder}>\r\n              <Typography variant=\"overline\" elevation={2}>\r\n                {appInfo.title}\r\n              </Typography>\r\n            </Grid>\r\n          </Toolbar>\r\n        </Grid>\r\n        <Grid item className={classes.draggableContent}>\r\n          {appComponent}\r\n        </Grid>\r\n      </Grid>\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst mapState = (state) => {\r\n  console.log(state);\r\n  return state;\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    onAppClose: (appid) => {\r\n      console.log(\"dispatching for \" + appid);\r\n      dispatch({\r\n        type: \"CLOSE_APP\",\r\n        appid,\r\n      });\r\n    },\r\n    onAppHide: (appid) => {\r\n      console.log(\"dispatching for \" + appid);\r\n      dispatch({\r\n        type: \"HIDE_APP\",\r\n        appid,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapState, mapDispatch)(Experiment);\r\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\n\nimport Taskbar from \"./components/Taskbar\";\nimport Terminal from \"./components/Terminal\";\nimport Stopwatch from \"./components/Stopwatch\";\nimport Experiment from \"./components/Experiment\";\nimport { connect } from \"react-redux\";\n\nimport { appType } from \"./commons/app\";\n\nconst useStyle = makeStyles((theme) => ({\n  app: {\n    top: \"0px\",\n    left: \"0px\",\n    position: \"fixed\",\n    height: \"100%\",\n    width: \"100%\",\n    background: \"url(https://i.imgur.com/I4IfRQa.png) center/cover\",\n  },\n}));\n\nconst renderApp = (app) => {\n  switch (app.id) {\n    case appType.TERMINAL:\n      return <Terminal />;\n    case appType.STOPWATCH:\n      return <Stopwatch />;\n    default:\n      return;\n  }\n};\n\nfunction App({ taskbar }) {\n  const classes = useStyle();\n\n  return (\n    <div className={classes.app}>\n      <Taskbar taskbar={taskbar} />\n      {Object.values(taskbar).map((app) => {\n        if (app.isOpen) {\n          return (\n            <Experiment\n              key={app.id}\n              appInfo={app}\n              appComponent={renderApp(app)}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nconst mapState = (state) => {\n  return {\n    taskbar: state.taskbar,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    shadesOfRed: {\r\n      light: \"#ff6059\",\r\n      redViolet: \"#c71585\",\r\n    },\r\n    shadesOfYellow: {\r\n      light: \"#ffbd2e\",\r\n    },\r\n    shadesOfGreen: {\r\n      light: \"#28ca42\",\r\n    },\r\n    shadesOfGrey: {\r\n      light: \"#cbcbcb\",\r\n    },\r\n    shadesOfBlue: {\r\n      dark: \"#262262\",\r\n    },\r\n    shadesOfPurple: {\r\n      light: \"#745fb5\",\r\n    },\r\n    containerBackground: {\r\n      dark: \"white\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Fira Code\"].join(\",\"),\r\n    icons: {\r\n      fontSize: \"22px\",\r\n    },\r\n  },\r\n  status: {\r\n    scroll: blueGrey[50],\r\n    play: \"#089c8c\",\r\n    pause: \"#f77452\",\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"*\": {\r\n          \"scrollbar-width\": \"thin\",\r\n          fontSize: 12,\r\n        },\r\n        \"*::-webkit-scrollbar\": {\r\n          width: 4,\r\n          height: 4,\r\n          backgroundColor: \"transparent\",\r\n        },\r\n        \"*::-webkit-scrollbar-thumb\": {\r\n          borderRadius: 4,\r\n          backgroundColor: blueGrey[100],\r\n          zIndex: \"2\",\r\n        },\r\n        \"*::-webkit-scrollbar-thumb:hover\": {\r\n          backgroundColor: blueGrey[200],\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import {\r\n  defaultApps,\r\n  OPEN_APP,\r\n  CLOSE_APP,\r\n  HIDE_APP,\r\n  SHOW_APP,\r\n} from \"../commons/app\";\r\n\r\nconst _changeAppStatus = (apps, appid, status, value) => {\r\n  // console.log(apps);\r\n  if (apps.hasOwnProperty(appid)) {\r\n    apps[appid][status] = value;\r\n    // console.log(status, value);\r\n  }\r\n  return apps;\r\n};\r\n\r\nconst taskbar = (state = { ...defaultApps }, action) => {\r\n  console.log(`state : `, state);\r\n  switch (action.type) {\r\n    case OPEN_APP:\r\n      return { ..._changeAppStatus(state, action.appid, \"isOpen\", true) };\r\n    case CLOSE_APP:\r\n      return { ..._changeAppStatus(state, action.appid, \"isOpen\", false) };\r\n    case SHOW_APP:\r\n      return { ..._changeAppStatus(state, action.appid, \"isHidden\", false) };\r\n    case HIDE_APP:\r\n      return { ..._changeAppStatus(state, action.appid, \"isHidden\", true) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskbar;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport taskbar from \"./reducers/taskbar\";\r\n\r\nconst rootReducer = combineReducers({\r\n  taskbar,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}